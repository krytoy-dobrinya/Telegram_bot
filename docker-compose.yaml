services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  bot:
    build: .
    env_file: .env
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./app:/app
      - ./.env:/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped


  alembic:
    build: .
    volumes:
      - ./app/alembic:/app/app/alembic
      - ./alembic.ini:/app/alembic.ini
    working_dir: /app 
    env_file: .env
    command: sh -c "alembic revision --autogenerate && alembic upgrade head"
    environment:
      - DEBUG=true
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:

